#! /bin/bash
PATH="/sbin:/usr/sbin:/bin:/usr/bin"
set -e

srcfile=common-funcs.in

function nenv_error () {
    msg=$1
    file=$2
    lineno=$3
    funcname=$4
    echo "${file}:${lineno}: $msg in function ${funcname}"
}

function nenv_confdir () {
    envname="$1"
    if [ -z "$envname" ]; then
	nenv_error "envname length is zero" $srcfile $LINENO $FUNCNAME
    fi
    echo @sysconfdir@/network-env/envs/$envname
}

cachedir=@sysconfdir@/network-env/cache

function def_command () {
    local  verbose="$1"
    local  no_act="$2"

    local  ln_vopt=''
    local  cp_vopt=''
    local  rm_vopt=''
    local  mkdir_vopt=''

    if [ "x$verbose" = "x1" ]; then
	ln_vopt=-v
	cp_vopt=-v
	rm_vopt=-v
	mkdir_vopt=-v
    fi

    LN="ln"
    CP="cp"
    RM="rm"
    MKDIR="mkdir"

    if [ "x$no_act" = "x1" ]; then
	LN="echo $LN"
	CP="echo $CP"
	RM="echo $RM"
	MKDIR="echo $MKDIR"
    fi

    LN="$LN $ln_vopt"
    CP="$CP $cp_vopt"
    RM="$RM $rm_vopt"
    MKDIR="$MKDIR $mkdir_vopt"
}

function vecho () {
    if [ "x$verbose" = "x1" ]; then
	echo "$@"
    fi
}

function vrun () {
    if [ "x$verbose" = "x1" ]; then
	"$@"
    fi
}

function do_cache () {
	cache=${cachedir}$1
	$MKDIR -p `dirname $cache`
	touch $cache
	file=`echo $file | sed 's@^'$cachedir'@@'`
	vecho "Cached ${file}."
}
